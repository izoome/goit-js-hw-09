{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAIpC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAZbL,EAAKa,iBAAiB,UAgBtB,SAAsBC,GACpBA,EAAMC,iBACN,IAAIC,EAAQC,OAAOjB,EAAKkB,SAASb,MAAMc,OACnCC,EAAOH,OAAOjB,EAAKkB,SAASE,KAAKD,OACjCE,EAASJ,OAAOjB,EAAKkB,SAASG,OAAOF,OAEzC,GAAIH,EAAQ,GAAKI,EAAO,GAAKC,GAAU,EAErC,YADAC,MAAM,+BAGR,IAAK,IAAIC,EAAW,EAAGA,GAAYF,EAAQE,IACzCpB,EAAcoB,EAAUP,GACrBQ,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBP,EAAA2B,OAAOC,QAAQ,qBAAqBtB,QAAeC,MAAW,CAC5DsB,SAAS,IAEXC,QAAQC,IAAI,qBAAqBzB,QAAeC,MAAU,IAE3DyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBP,EAAA2B,OAAOM,QAAQ,oBAAoB3B,QAAeC,MAAW,CAC3DsB,SAAS,IAEXC,QAAQC,IAAI,oBAAoBzB,QAAeC,MAAU,IAE7DW,GAASI,EAEXN,EAAMkB,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix/build/notiflix-notify-aio\";\n\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", onFormSubmit);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  let deley = Number(form.elements.delay.value);\n  let step = Number(form.elements.step.value);\n  let amount = Number(form.elements.amount.value);\n\n  if (deley < 0 || step < 0 || amount <= 0) {\n    alert(\"Будь ласка, заповніть поле.\");\n    return;\n  }\n  for (let position = 1; position <= amount; position++) {\n    createPromise(position, deley)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n          useIcon: false,\n        });\n        console.log(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n          useIcon: false,\n        });\n        console.log(`Rejected promise ${position} in ${delay}ms`);\n      });\n    deley += step;\n  }\n  event.currentTarget.reset();\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","deley","Number","elements","value","step","amount","alert","position1","then","Notify","success","useIcon","console","log","catch","failure","currentTarget","reset"],"version":3,"file":"03-promises.5336d687.js.map"}